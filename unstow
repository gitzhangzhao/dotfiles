#!/usr/bin/env bash

# Script to unstow specific dotfiles.

PWD=$(basename "$(pwd)")
ARGC=$#
STOW="/usr/bin/stow"
STOW_FLAGS="--no-fold --restow -D"
DOTFILES_DIR="dotfiles"

# Color definitions
RED="\033[31m"
YELLOW="\033[33m"
BLUE="\033[34m"
RESET="\033[0m"

# Function to check if the script is run as root
function check_root() {
    if [ "$(id -u)" -eq 0 ]; then
        echo -e "${RED}Error:${RESET} This script should not be run as root."
        exit 1
    fi
}

# Function to check if a required program is installed
function check_prog() {
    if ! command -v "$1" &> /dev/null; then
        echo -e "${RED}Error:${RESET} Command not found: ${YELLOW}$1${RESET}. Aborting."
        exit 1
    fi
}

# Function to ensure the script is executed in the correct directory
function check_path() {
    if [ "$PWD" != "$DOTFILES_DIR" ]; then
        echo -e "${RED}Error:${RESET} Please run this script from the ${YELLOW}~/dotfiles${RESET} directory."
        exit 1
    fi
}

# Function to display help message
function print_help() {
    echo -e "${BLUE}Usage:${RESET} ./unstow <app>"
    echo -e "Unstow a specific application from your dotfiles."
}

# Function to check the provided arguments
function check_argv() {
    if [ $ARGC -ne 1 ]; then
        print_help
        echo -e "${RED}Error:${RESET} Incorrect number of arguments."
        exit 1
    fi

    if [[ "$1" == "-h" || "$1" == "--help" ]]; then
        print_help
        exit 0
    fi
}

# Function to unstow a specific directory
function unstow() {
    local app="$1"
    local unstowed=false

    # Check and unstow from home directory
    if find ./ -maxdepth 1 -type d -not -name ".*" | cut -d '/' -f 2 | grep -q "^${app}$"; then
        $STOW $STOW_FLAGS --target "$HOME" "$app" &> /dev/null
        unstowed=true
    fi

    # Check and unstow from etc directory
    if find ./etc/ -maxdepth 1 -type d | cut -d '/' -f 3 | grep -q "^${app}$"; then
        pushd etc &> /dev/null
        sudo $STOW $STOW_FLAGS --target /etc "$app" &> /dev/null
        popd &> /dev/null
        unstowed=true
    fi

    # Check and unstow from usr directory
    if find ./usr/ -maxdepth 1 -type d | cut -d '/' -f 3 | grep -q "^${app}$"; then
        pushd usr &> /dev/null
        sudo $STOW $STOW_FLAGS --target /usr "$app" &> /dev/null
        popd &> /dev/null
        unstowed=true
    fi

    # Handle errors if the app was not found
    if ! $unstowed; then
        echo -e "${RED}Error: $app was not found in your dotfiles."
        exit 1
    fi

    echo -e "${YELLOW}âœ”  ${app} has been successfully unstowed."
}

# Main script logic
check_root
check_prog stow
check_path
check_argv "$1"
unstow "$1"
